#!/bin/sh

#This file is part of the TinyTools distribution (https://github.com/Calebe94/TinyTools).
#Copyright (C) 2021 TinyTools
#
#This program is free software: you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation, either version 3 of the License, or
#(at your option) any later version.
#
#This program is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.
#
#You should have received a copy of the GNU General Public License
#along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

####################################################################################################
# Variables used in the script.
####################################################################################################
DMENU_ITEMS="/tmp/dmenu_items"
DMENU_ARGS=$@
TNOTES=$(pwd)/tnotes

###################################################################################################
# add_note function
# takes 1(one) argument: the name of the element to add.
###################################################################################################
add_note()
{
  if [ "$@" ] && [ "$@" != "[add]" ]; then
    note="$@"
    $TNOTES -n "$TNOTES_PATH/$@"
    xdg-open "$TNOTES_PATH/${note%.*}.md"
  fi
}

###################################################################################################
# rename_note function
# takes 1(one) argument: the name of the element to rename.
###################################################################################################
rename_note()
{
    new_note=$(echo "" | dmenu -p "Rename" $DMENU_ARGS)
    echo "moving $@ to $new_note"
    $TNOTES --mv "$TNOTES_PATH/$@" "$TNOTES_PATH/${new_note%.*}.md"
    show_notes 
}

###################################################################################################
# remove_note function
# takes 1(one) argument: the name of the element to remove.
###################################################################################################
remove_note()
{
    $TNOTES --rm "$TNOTES_PATH/$@"
    show_notes 
}

###################################################################################################
# note_selection function
# takes 1(one) argument: the name of the element selected.
# The function now uses DMENU to show some options to you.
###################################################################################################
note_selection()
{
    chosen="$@"
    action=$(echo "[open]\n[rename]\n[delete]\n[back]" | dmenu -p "$chosen" $DMENU_ARGS)
    case $action in
        *"[open]"*)         xdg-open "$TNOTES_PATH/$chosen";;
        *"[rename]"*)       rename_note "$chosen" ;;
        *"[delete]"*)       remove_note "$chosen" ;;
        *"[back]"*)         show_notes ;;
    esac
}

###################################################################################################
# show_notes function
# Lists the notes
###################################################################################################
show_notes()
{
  actions="[add]"

  echo $actions > $DMENU_ITEMS

  $TNOTES -l $TNOTES_PATH >> $DMENU_ITEMS
  sed -i "s|$TNOTES_PATH||g" $DMENU_ITEMS

  chosen=$(cat $DMENU_ITEMS | dmenu -p "Notes" $DMENU_ARGS)
  
  if grep -Fxq "$chosen" $DMENU_ITEMS
  then 
    case "$chosen" in
      *"[add]"*)    todo=$(echo "" | dmenu -p "Add:" $DMENU_ARGS) ;  add_note "$chosen"; show_notes ;;
      *)            note_selection "$chosen";;
    esac
  else
    add_note "$chosen"
  fi

}

###################################################################################################
############################################## MAIN ###############################################
###################################################################################################
show_notes
